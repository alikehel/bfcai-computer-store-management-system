
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

public class ProductsFrame extends javax.swing.JFrame {

    /**
     * Creates new form ProductsFrame
     */
    public ProductsFrame() {
        initComponents();
        showAllData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jBackToDashboardButton = new javax.swing.JButton();
        jDeleteButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jInsertButton = new javax.swing.JButton();
        jUpdateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jProductDescription = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jProductsTable = new javax.swing.JTable();
        jProductID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jProductPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProductName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jProductStock = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel5.setBackground(new java.awt.Color(25, 25, 25));

        jBackToDashboardButton.setBackground(new java.awt.Color(25, 25, 25));
        jBackToDashboardButton.setForeground(new java.awt.Color(255, 255, 255));
        jBackToDashboardButton.setText("Back To Dashboard");
        jBackToDashboardButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBackToDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackToDashboardButtonActionPerformed(evt);
            }
        });

        jDeleteButton.setBackground(new java.awt.Color(25, 25, 25));
        jDeleteButton.setForeground(new java.awt.Color(255, 255, 255));
        jDeleteButton.setText("Delete");
        jDeleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteButtonActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product Description");

        jInsertButton.setBackground(new java.awt.Color(25, 25, 25));
        jInsertButton.setForeground(new java.awt.Color(255, 255, 255));
        jInsertButton.setText("Insert");
        jInsertButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jInsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInsertButtonActionPerformed(evt);
            }
        });

        jUpdateButton.setBackground(new java.awt.Color(25, 25, 25));
        jUpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        jUpdateButton.setText("Update");
        jUpdateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateButtonActionPerformed(evt);
            }
        });

        jProductDescription.setBackground(new java.awt.Color(25, 25, 25));
        jProductDescription.setColumns(20);
        jProductDescription.setForeground(new java.awt.Color(255, 255, 255));
        jProductDescription.setRows(5);
        jScrollPane2.setViewportView(jProductDescription);

        jProductsTable.setAutoCreateRowSorter(true);
        jProductsTable.setBackground(new java.awt.Color(25, 25, 25));
        jProductsTable.setForeground(new java.awt.Color(255, 255, 255));
        jProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Product Price", "Product Stock", "Product Description"
            }
        ));
        jProductsTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jProductsTable.setGridColor(new java.awt.Color(25, 25, 25));
        jProductsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jProductsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jProductsTable);

        jProductID.setEditable(false);
        jProductID.setBackground(new java.awt.Color(25, 25, 25));
        jProductID.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product ID");

        jProductPrice.setBackground(new java.awt.Color(25, 25, 25));
        jProductPrice.setForeground(new java.awt.Color(255, 255, 255));
        jProductPrice.setToolTipText("xfchbf");

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Product Price");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Product Name");

        jProductName.setBackground(new java.awt.Color(25, 25, 25));
        jProductName.setForeground(new java.awt.Color(255, 255, 255));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Product Stock");

        jProductStock.setBackground(new java.awt.Color(25, 25, 25));
        jProductStock.setForeground(new java.awt.Color(255, 255, 255));
        jProductStock.setToolTipText("dsfdsdddddddd");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jProductName, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jProductStock)))
                    .addComponent(jLabel5)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jBackToDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(96, 96, 96)
                            .addComponent(jInsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jUpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))))
                .addGap(42, 42, 42)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInsertButton)
                    .addComponent(jUpdateButton)
                    .addComponent(jBackToDashboardButton)
                    .addComponent(jDeleteButton))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jProductStock.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jProductsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProductsTableMouseClicked
        int row_num = jProductsTable.getSelectedRow();
        String id = jProductsTable.getValueAt(row_num, 0).toString();
        String name = jProductsTable.getValueAt(row_num, 1).toString();
        String prize = jProductsTable.getValueAt(row_num, 2).toString();
        String stock = jProductsTable.getValueAt(row_num, 3).toString();
        String description = jProductsTable.getValueAt(row_num, 4).toString();

        jProductID.setText(id);
        jProductName.setText(name);
        jProductPrice.setText(prize);
        jProductStock.setText(stock);
        jProductDescription.setText(description);
    }//GEN-LAST:event_jProductsTableMouseClicked

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/computerstoremanagementsystem", "root", "root");
            PreparedStatement stmt = con.prepareStatement("update producttable set ProductName=?,ProductPrice=?,ProductStock=? ,ProductDescription=? where ProductID=?");
            String id = jProductID.getText();
            String name = jProductName.getText();
            double price = 0;
            int stock = 0;
            boolean correctFormat = true;
            //check that price is correct positive double number
            try {
                price = Double.parseDouble(jProductPrice.getText());
                if (price < 0) {
                    throw new Exception();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Product Price must be a positive Number!!");
                correctFormat = false;
            }
            //check that stock is correct positive integer number
            try {
                stock = Integer.parseInt(jProductStock.getText());
                if (stock < 0) {
                    throw new Exception();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Product Stock must be a positive Integer!!");
                correctFormat = false;
            }
            if (!correctFormat) {
                return;
            }
            String description = jProductDescription.getText();

            stmt.setString(1, name);
            stmt.setString(2, price + "");
            stmt.setString(3, stock + "");
            stmt.setString(4, description);
            stmt.setString(5, id);

            stmt.executeUpdate();
            System.out.println("sadf");
            showAllData();

            JOptionPane.showMessageDialog(this, "Update Success");
            jProductID.setText("");
            jProductName.setText("");
            jProductPrice.setText("");
            jProductStock.setText("");
            jProductDescription.setText("");

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void jInsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInsertButtonActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/computerstoremanagementsystem", "root", "root");
            PreparedStatement stmt = con.prepareStatement("insert into producttable(ProductName,ProductPrice,ProductStock,ProductDescription) values(?,?,?,?)");
            String name = jProductName.getText();
            double price = 0;
            int stock = 0;
            boolean correctFormat = true;
            //check that price is correct positive double number
            try {
                price = Double.parseDouble(jProductPrice.getText());
                if (price < 0) {
                    throw new Exception();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Product Price must be a positive Number!!");
                correctFormat = false;
            }
            //check that stock is correct positive integer number
            try {
                stock = Integer.parseInt(jProductStock.getText());
                if (stock < 0) {
                    throw new Exception();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Product Stock must be a positive Integer!!");
                correctFormat = false;
            }
            if (!correctFormat) {
                return;
            }
            String description = jProductDescription.getText();
            stmt.setString(1, name);
            stmt.setString(2, price + "");
            stmt.setString(3, stock + "");
            stmt.setString(4, description);
            stmt.executeUpdate();
            showAllData();

            JOptionPane.showMessageDialog(this, "Insertion Success");
            jProductName.setText("");
            jProductPrice.setText("");
            jProductStock.setText("");
            jProductDescription.setText("");

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jInsertButtonActionPerformed

    private void jDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteButtonActionPerformed
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/computerstoremanagementsystem", "root", "root");
            PreparedStatement stmt = con.prepareStatement("delete from producttable where ProductID=?");
            String id = jProductID.getText();
            stmt.setString(1, id);
            stmt.executeUpdate();
            showAllData();
            JOptionPane.showMessageDialog(this, "Delete Success");
            jProductID.setText("");
            jProductName.setText("");
            jProductPrice.setText("");
            jProductStock.setText("");
            jProductDescription.setText("");

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jDeleteButtonActionPerformed

    private void jBackToDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackToDashboardButtonActionPerformed
        this.setVisible(false);
        DashboardFrame d = new DashboardFrame();
        d.setVisible(true);
        d.setLocationRelativeTo(this);
    }//GEN-LAST:event_jBackToDashboardButtonActionPerformed

    private void showAllData() {
        try {
            //set database connection
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/computerstoremanagementsystem", "root", "root");
            //prepare query
            PreparedStatement stmt = con.prepareStatement("select ProductID,ProductName,ProductPrice,ProductStock,ProductDescription from producttable;");
            //execute query and save data
            ResultSet set = stmt.executeQuery();
            DefaultTableModel dm = new DefaultTableModel() {
                @Override
                //make cells not editable
                public boolean isCellEditable(int row, int column) {
                    //all cells false
                    return false;
                }
            };
            dm.addColumn("ProductID");
            dm.addColumn("ProductName");
            dm.addColumn("ProductPrice");
            dm.addColumn("ProductStock");
            dm.addColumn("ProductDescription");

            while (set.next()) {
                String r[] = {set.getString(1), set.getString(2), set.getString(3), set.getString(4), set.getString(5)};
                dm.addRow(r);
            }
            jProductsTable.setModel(dm);
            //select a single row only 
            jProductsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        } catch (SQLException ex) {
            System.out.println("Error");
        }

        CustomMethods.makeDark(jProductsTable, jScrollPane1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBackToDashboardButton;
    private javax.swing.JButton jDeleteButton;
    private javax.swing.JButton jInsertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextArea jProductDescription;
    private javax.swing.JTextField jProductID;
    private javax.swing.JTextField jProductName;
    private javax.swing.JTextField jProductPrice;
    private javax.swing.JTextField jProductStock;
    private javax.swing.JTable jProductsTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jUpdateButton;
    // End of variables declaration//GEN-END:variables
}
